@import '../../variables';

.reset-password {
    min-height      : 100vh;
    display         : flex;
    align-items     : center;
    justify-content : center;
    padding         : 2rem;
    background-color: $background-color;

    &__container {
        width        : 100%;
        max-width    : 440px;
        padding      : 2.5rem;
        background   : white;
        border-radius: 8px;
        box-shadow   : $box-shadow;

        @media (max-width: 768px) {
            padding: 1.5rem;
        }
    }

    &__title {
        font-size    : 2rem;
        font-weight  : 600;
        color        : $text-primary-color;
        text-align   : center;
        margin-bottom: 2rem;

        @media (max-width: 768px) {
            font-size    : 1.5rem;
            margin-bottom: 1.5rem;
        }
    }

    &__form {
        display       : flex;
        flex-direction: column;
        gap           : 1.5rem;
    }

    .reset-password__container{
        position: relative;

        .btn-back{
            position: absolute;
            top     :0;
            left   : -10%;
            font-size: 2rem;
            font-weight: bold;
            color: rgba(128, 128, 128, 0.553);
            cursor: pointer;
            animation: roteBtn .7s;

            transition: all .3s ease-in;

            &:hover{
                color: gray;
                margin-left: 5px;
            }
        }
        @keyframes roteBtn {
            from{
                scale: 0;
                transform: rotate(4.5turn)
            }
            to{
                
                scale: 1;
            }
        }
    }
}

.form-group {
    display       : flex;
    flex-direction: column;
    gap           : 0.5rem;

    label {
        font-size  : 0.9rem;
        font-weight: 500;
        color      : $text-secondary-color;
    }
}

.input-wrapper {
    position: relative;

    input {
        width        : 100%;
        padding      : 0.875rem 1rem;
        font-size    : 1rem;
        border       : 1px solid $border-color;
        border-radius: 4px;
        transition   : all 0.2s ease;

        &:focus {
            border-color: $primary-color;
            box-shadow  : 0 0 0 2px rgba($primary-color, 0.1);
        }

        &.error {
            border-color: $error-color;
        }

        &:disabled {
            background-color: $gray-100;
            cursor          : not-allowed;
        }
    }

    .toggle-password {
        position  : absolute;
        right     : 1rem;
        top       : 50%;
        transform : translateY(-50%);
        background: none;
        border    : none;
        color     : $gray-400;
        cursor    : pointer;
        padding   : 0.25rem;

        &:hover {
            color: $gray-500;
        }
    }
}

.error-message {
    font-size : 0.875rem;
    color     : $error-color;
    margin-top: 0.25rem;
}

.block-timer {
    text-align      : center;
    padding         : 0.75rem;
    background-color: $gray-100;
    border-radius   : 4px;
    color           : $text-secondary-color;
    font-size       : 0.875rem;
}

.remaining-attempts {
    text-align: center;
    color     : $warning-color;
    font-size : 0.875rem;
}

.submit-button {
    width           : 100%;
    padding         : 1rem;
    background-color: $primary-color;
    color           : white;
    border          : none;
    border-radius   : 4px;
    font-size       : 1rem;
    font-weight     : 500;
    cursor          : pointer;
    transition      : background-color 0.2s ease;
    position        : relative;

    &:hover:not(:disabled) {
        background-color: darken($primary-color, 5%);
    }

    &:disabled {
        background-color: $gray-300;
        cursor          : not-allowed;
    }
}

.spinner {
    width           : 20px;
    height          : 20px;
    border          : 2px solid rgba(255, 255, 255, 0.3);
    border-radius   : 50%;
    border-top-color: white;
    animation       : spin 0.8s linear infinite;
    margin          : 0 auto;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}